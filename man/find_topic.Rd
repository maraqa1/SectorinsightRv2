% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_topic.R, R/predict_by_topic.R
\name{find_topic}
\alias{find_topic}
\title{Find Topics Across Models}
\usage{
find_topic(
  topic_keyword,
  fuzzy = FALSE,
  verbose = FALSE,
  pkgname = utils::packageName()
)

find_topic(
  topic_keyword,
  fuzzy = FALSE,
  verbose = FALSE,
  pkgname = utils::packageName()
)
}
\arguments{
\item{topic_keyword}{A character string specifying the topic keyword to search for in cluster labels.}

\item{fuzzy}{Logical. If TRUE, performs approximate (fuzzy) matching using \code{agrepl}. If FALSE, performs
exact matching using \code{grepl}. Default is FALSE.}

\item{verbose}{Logical. If TRUE, prints debug information about the matching process. Default is FALSE.}

\item{pkgname}{A character string specifying the name of the package. Default is the name of the current package.}
}
\value{
A list of models containing the topic of interest, where each list element
is a data frame of clusters and their labels.

A list where each element corresponds to a model containing matching topics. Each element is a data frame
of matching clusters with columns:
\describe{
\item{\code{Cluster}}{Cluster ID within the model.}
\item{\code{Suggested_Label}}{Cluster label containing the matched topic keyword.}
}
If no matches are found, returns \code{NULL}.
}
\description{
Searches all available models for a specific topic keyword in the cluster labels.

Searches for a specific topic keyword across all models in the package. The function allows either
exact matching or approximate (fuzzy) matching of topic names and returns a list of models containing
the matching topics.
}
\examples{
\dontrun{
find_topic("Cybersecurity")
}

\dontrun{
# Example 1: Find topics using exact matching
exact_matches <- find_topic("Hydrogen Energy and Renewable Fuels", fuzzy = FALSE, verbose = TRUE)

# Example 2: Find topics using fuzzy matching
fuzzy_matches <- find_topic("Renewable Energy", fuzzy = TRUE, verbose = TRUE)

# Example 3: Check all matching models and topics
if (!is.null(fuzzy_matches)) {
  print(fuzzy_matches)
}
}

}
